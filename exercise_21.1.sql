SELECT * FROM hr.employees;

-- Escreva uma query que exiba o maior sal√°rio da tabela.
SELECT MAX(salary) FROM hr.employees;
SELECT MIN(salary) FROM hr.employees;

-- Escreva uma query que exiba a diferen√ßa entre o maior e o menor sal√°rio.
SELECT MAX(salary) - MIN(salary) FROM hr.employees;

-- Escreva uma query que exiba a m√©dia salarial de cada JOB_ID, ordenando pela m√©dia salarial em ordem decrescente.
SELECT job_id, AVG(salary) AS media
FROM hr.employees
GROUP BY job_id
ORDER BY media DESC;

-- Escreva uma query que exiba a quantidade de dinheiro necess√°ria para realizar o pagamento de todas as pessoas funcion√°rias.
SELECT SUM(salary) FROM hr.employees;

-- üöÄ Escreva uma query que exiba quatro informa√ß√µes: o maior sal√°rio, o menor sal√°rio, a soma de todos os sal√°rios e a m√©dia dos sal√°rios.
 -- Todos os valores devem ser formatados para ter apenas duas casas decimais.
 SELECT MAX(salary) AS higher_salary,
 MIN(salary) AS lower_salary,
 SUM(salary) AS SUM,
 ROUND(AVG(salary), 2) AS media
 FROM hr.employees;
 
-- Escreva uma query que exiba a quantidade de pessoas que trabalham como pessoas programadoras (IT_PROG).
SELECT job_id, COUNT(*)
FROM hr.employees
GROUP BY job_id
HAVING job_id = 'IT_PROG';

SELECT JOB_ID , COUNT(*) AS 'total'
FROM hr.employees
WHERE JOB_ID = "IT_PROG";

-- Escreva uma query que exiba a quantidade de dinheiro necess√°ria para efetuar o pagamento de cada profiss√£o (JOB_ID).
SELECT JOB_ID, SUM(salary)
FROM hr.employees
GROUP BY JOB_ID;

-- Utilizando a query anterior, fa√ßa as altera√ß√µes para que seja exibido somente a quantidade de dinheiro necess√°ria para cobrir 
-- a folha de pagamento das pessoas programadoras (IT_PROG).
SELECT JOB_ID, SUM(salary)
FROM hr.employees
GROUP BY JOB_ID
HAVING JOB_ID = 'IT_PROG';

-- Escreva uma query que exiba em ordem decrescente a m√©dia salarial de todos os cargos, exceto das pessoas programadoras (IT_PROG).
SELECT JOB_ID, AVG(SALARY) AS media
FROM hr.employees
GROUP BY JOB_ID
HAVING JOB_ID <> 'IT_PROG'
ORDER BY media DESC;

-- üöÄ Escreva um query que exiba m√©dia salarial e o n√∫mero de funcion√°rios de todos os departamentos com mais de dez funcion√°rios. 
-- Dica: agrupe pelo DEPARTMENT_ID.

SELECT DEPARTMENT_ID, 
AVG(SALARY),
COUNT(*) AS number
FROM hr.employees
GROUP BY DEPARTMENT_ID
HAVING number > 10;

-- üöÄ Escreva uma query que atualize a coluna PHONE_NUMBER, de modo que todos os telefones iniciados por 515 agora devem iniciar com 777.
SET SQL_SAFE_UPDATES = 0;

UPDATE hr.employees
SET phone_number = REPLACE(phone_number, '515', '777')
WHERE phone_number LIKE '515%';

-- Escreva uma query que s√≥ exiba as informa√ß√µes dos funcion√°rios cujo o primeiro nome tenha oito ou mais caracteres.
SELECT
	*
FROM hr.employees
WHERE length(first_name) >=8 ;

-- Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: id, primeiro nome e ano no qual foi contratado 
-- (exiba somente o ano).
SELECT 
	employee_id,
    first_name,
    YEAR(hire_date)
FROM hr.employees;

-- üöÄ Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: id, primeiro nome e dia do m√™s no qual foi 
-- contratado (exiba somente o dia).
SELECT 	
	employee_id,
    first_name,
    DAY(HIRE_DATE)
FROM hr.employees;

-- Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: id, primeiro nome e m√™s no qual foi contratado (exiba 
-- somente o m√™s).
SELECT 
	EMPLOYEE_ID,
    first_name,
    MONTH(hire_date) as month
FROM hr.employees;

-- Escreva uma query que exiba os nomes dos funcion√°rios em letra mai√∫scula.
SELECT UCASE(CONCAT(first_name, ' ' ,last_name)) 
FROM hr.employees;

-- Escreva uma query que exiba o sobrenome e a data de contrata√ß√£o de todos os funcion√°rio contratados em julho de 1987.
SELECT first_name, last_name, hire_date
FROM hr.employees
WHERE 
	MONTH(hire_date) = 7 
    AND
	YEAR(HIRE_DATE) = 1987;

-- üöÄ Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: nome, sobrenome, tempo que trabalha na empresa (em dias).
SELECT 
	first_name,
    last_name,
    DATEDIFF(now(), hire_date) AS days
FROM hr.employees;

-- Tempo m√°ximo, minimo e a m√©dia de tempo dos filmes lan√ßados em 2006 por rating

SELECT 
	rating,
    MAX(length) AS maior_duracao,
    MIN(length) AS menor_duracao,
    AVG(length) AS media_duracao
FROM sakila.film
WHERE release_year = 2006
GROUP BY rating;

-- M√©dia de dias que uma pessoa usu√°ria permanece com o produto alugado
SELECT 
     customer_id, 
     AVG(DATEDIFF(rental_date, return_date))
FROM sakila.rental
GROUP BY customer_id;

-- quantas pessoas usu√°rias temos por cidade?

SELECT
   city_id,
   COUNT(*)
FROM sakila.address
GROUP BY city_id;

-- Qual o valor total recebido dentro de cada m·∫Ωs?

SELECT
    MONTH(payment_date),
    YEAR(payment_date),
    SUM(amount) as `valor total`
FROM sakila.payment
GROUP BY
   MONTH(payment_date),
   YEAR(payment_date);
